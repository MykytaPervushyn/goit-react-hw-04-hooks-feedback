{"version":3,"sources":["components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","className","s","statisticsList","statisticItem","FeedbackOptions","options","onLeaveFeedback","optionsList","map","label","feedbackOption","type","button","onClick","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","prevState","Math","floor","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kNAceA,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,M,gBCiBUC,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAIC,UAAWC,IAAEC,eAAjB,UACE,qBAAIF,UAAWC,IAAEE,cAAjB,kBAAsCR,KACtC,qBAAIK,UAAWC,IAAEE,cAAjB,qBAAyCP,KACzC,qBAAII,UAAWC,IAAEE,cAAjB,iBAAqCN,KACrC,qBAAIG,UAAWC,IAAEE,cAAjB,mBAAuCL,KACvC,qBAAIE,UAAWC,IAAEE,cAAjB,+BAAmDJ,EAAnD,W,gBCgBWK,EAtBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oBAAIN,UAAWC,IAAEM,YAAjB,SACGF,EAAQG,KAAI,SAAAC,GAAK,OAChB,oBAAIT,UAAWC,IAAES,eAAjB,SAEE,wBACEC,KAAK,SACLX,UAAWC,IAAEW,OACbC,QAAS,kBAAMP,EAAgBG,IAHjC,SAKGA,KANIA,SCCAK,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,6BAAKA,KCI5B,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOtB,EAAP,KAAauB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOrB,EAAP,KAAgBuB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOpB,EAAP,KAAYuB,EAAZ,KAIMC,EAAqB,WACzB,OAAOxB,EAAMD,EAAUD,GA6BzB,OACI,sBAAKK,UAAU,MAAf,UACE,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAAC,EAAD,CACEa,QApCM,CAAC,OAAQ,UAAW,OAqC1BC,gBAtBc,SAAAG,GAEtB,OAAQA,GACN,IAAK,OACHS,GAAQ,SAAAI,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHH,GAAW,SAAAG,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHF,GAAO,SAAAE,GAAS,OAAIA,EAAY,KAChC,MACF,QACE,aAYA,cAAC,EAAD,CAAS9B,MAAM,aAAf,SACG6B,IACC,cAAC,EAAD,CACE1B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,IACPtB,mBAxCNF,EAAMD,EAAUD,IAAS,EACpB,EAEF4B,KAAKC,MACF,IAAP7B,GAAeE,EAAMD,EAAUD,MAuC1B,cAAC,EAAD,CAAcoB,QAAQ,2BCzDlCU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACX,EAAD,MAEFY,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,cAAgB,oC,kBCAtFD,EAAOC,QAAU,CAAC,YAAc,qCAAqC,eAAiB,wCAAwC,OAAS,mC","file":"static/js/main.36e7c26c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul className={s.statisticsList}>\n    <li className={s.statisticItem}>Good:{good}</li>\n    <li className={s.statisticItem}>Neutral:{neutral}</li>\n    <li className={s.statisticItem}>Bad:{bad}</li>\n    <li className={s.statisticItem}>Total:{total}</li>\n    <li className={s.statisticItem}>Positive feedback:{positivePercentage}%</li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <ul className={s.optionsList}>\n    {options.map(label => (\n      <li className={s.feedbackOption} \n          key={label}>\n        <button\n          type=\"button\"\n          className={s.button}\n          onClick={() => onLeaveFeedback(label)}\n        >\n          {label}\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <h2>{message}</h2>;\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import { useState } from 'react';\n\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const options = ['good', 'neutral', 'bad']\n  \n  const countTotalFeedback = () => {\n    return bad + neutral + good;\n  };\n\n   const countPositiveFeedbackPercentage = () => {\n    if (bad + neutral + good === 0) {\n      return 0;\n    }\n    return Math.floor(\n      (good * 100) / (bad + neutral + good),\n    );\n  };\n\n  const onLeaveFeedback = label => {\n    \n    switch (label) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__3xq5U\",\"statisticItem\":\"Statistics_statisticItem__9mQxD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionsList\":\"FeedbackOptions_optionsList__3OwgR\",\"feedbackOption\":\"FeedbackOptions_feedbackOption__28_Fd\",\"button\":\"FeedbackOptions_button__2y48K\"};"],"sourceRoot":""}